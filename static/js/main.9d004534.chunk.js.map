{"version":3,"sources":["reducers/entries.js","actionTypes.js","reducers/index.js","actions.js","middleware/parseLocation.js","middleware/updateTitle.js","middleware/updateLocation.js","configureStore.js","components/SearchField.js","components/UseRegExp.js","components/InvertResult.js","components/HideNoDoc.js","components/ResultCount.js","components/TableHeaderCell.js","components/SortableTableHeaderCell.js","components/TableHeaderRow.js","components/LinkCell.js","components/NumberCell.js","components/TableRow.js","components/Table.js","components/Main.js","App.js","index.js"],"names":["sortPriorities","class_name","class_desc","method_count","method_desc","total","initialState","filterKey","filteredEntries","sortKey","sortOrders","hideNoDoc","useRegExp","invertResult","totalChars","entries","reduce","sum","entry","setFilteredEntries","state","filterEntries","filteredTotalChars","length","percentage","Math","round","sortPriority","filter","pattern","condition","RegExp","e","test","toLowerCase","indexOf","sort","a","b","i","key","x","y","order","map","index","newState","action","type","payload","createRootReducer","history","combineReducers","router","connectRouter","setFilterKey","setHideNoDoc","setUseRegExp","setInvertResult","qs","require","done","parseLocation","getState","dispatch","next","location","pathname","params","parse","search","updateTitle","result","title","document","updateLocation","currentLocation","query","stringify","newLocation","push","createHashHistory","middleware","routerMiddleware","_","SearchField","props","debounce","input","updateInput","event","setState","target","value","className","placeholder","this","onChange","React","Component","connect","id","checked","htmlFor","entry_count","char_count","toLocaleString","TableHeaderCell","label","isNumber","width","classnames","style","stateSortKey","setSortKey","onClick","TableHeaderRow","LinkCell","href","path","rel","NumberCell","number","TableRow","Main","preloadedState","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","component","exact","getElementById"],"mappings":"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","file":"static/js/main.9d004534.chunk.js","sourcesContent":["import { SET_FILTER_KEY, SET_SORT_KEY, SET_HIDE_NO_DOC, SET_USE_REGEXP, SET_INVERT_RESULT } from '../actionTypes';\nimport entries from '../data/entries.json';\n\nconst sortPriorities = {\n  class_name: ['class_name'],\n  class_desc: ['class_desc', 'method_desc', 'method_count', 'class_name'],\n  method_count: ['method_count', 'method_desc', 'class_desc', 'class_name'],\n  method_desc: ['method_desc', 'class_desc', 'method_count', 'class_name'],\n  total: ['total', 'method_desc', 'class_desc', 'method_count', 'class_name']\n};\n\nconst initialState = {\n  filterKey: '',\n  filteredEntries: [],\n  sortKey: 'class_desc',\n  sortOrders: {\n    class_name: 1,\n    class_desc: -1,\n    method_count: -1,\n    method_desc: -1,\n    total: -1\n  },\n  hideNoDoc: true,\n  useRegExp: false,\n  invertResult: false\n};\n\nconst totalChars = entries.reduce((sum, entry) => sum + entry.total, 0);\n\nconst setFilteredEntries = state => {\n  state.filteredEntries = filterEntries(state);\n  const filteredTotalChars = state.filteredEntries.reduce((sum, entry) => sum + entry.total, 0);\n  if (state.filteredEntries.length === entries.length) {\n    state.percentage = 100;\n  } else if (state.filteredEntries.length === 0) {\n    state.percentage = 0;\n  } else {\n    state.percentage = Math.round((filteredTotalChars / totalChars) * 10000) / 100;\n  }\n  return state;\n};\n\nconst filterEntries = state => {\n  const sortPriority = sortPriorities[state.sortKey];\n  return entries.filter(entry => {\n    let useRegExp = state.useRegExp;\n    let pattern;\n    let condition;\n    if (useRegExp) {\n      try {\n        pattern = new RegExp(state.filterKey, 'i');\n      } catch (e) {\n        useRegExp = false\n      }\n    }\n    if (useRegExp) {\n      condition = pattern.test(entry.class_name);\n    } else {\n      condition = entry.class_name.toLowerCase().indexOf(state.filterKey.toLowerCase()) !== -1;\n    }\n    return state.invertResult ? !condition : condition;\n  }).filter(entry => {\n    if (state.hideNoDoc) {\n      return entry.total !== 0;\n    } else {\n      return true;\n    }\n  }).sort((a, b) => {\n    for (let i = 0; i < sortPriority.length; i++) {\n      const key = sortPriority[i]\n      const x = a[key];\n      const y = b[key];\n      const order = state.sortOrders[key];\n      if (x < y) {\n        return -1 * order;\n      } else if (x > y) {\n        return 1 * order;\n      }\n    }\n    return 0;\n  }).map((entry, index) => {\n    entry.index = index + 1;\n    return entry;\n  });\n};\n\nexport default (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_FILTER_KEY:\n      newState = {\n        ...state,\n        filterKey: action.payload.filterKey\n      };\n      return setFilteredEntries(newState);\n    case SET_SORT_KEY:\n      const sortKey = action.payload.sortKey;\n      const order = sortKey === state.sortKey ? -1 : 1;\n      const sortOrders = {...state.sortOrders};\n      sortOrders[sortKey] *= order;\n      newState = {\n        ...state,\n        sortKey,\n        sortOrders\n      };\n      return setFilteredEntries(newState);\n    case SET_HIDE_NO_DOC:\n      newState = {\n        ...state,\n        hideNoDoc: action.payload.hideNoDoc\n      }\n      return setFilteredEntries(newState);\n    case SET_USE_REGEXP:\n      newState = {\n        ...state,\n        useRegExp: action.payload.useRegExp\n      }\n      return setFilteredEntries(newState);\n    case SET_INVERT_RESULT:\n      newState = {\n        ...state,\n        invertResult: action.payload.invertResult\n      }\n      return setFilteredEntries(newState);\n    default:\n      return state\n  }\n};\n","export const SET_FILTER_KEY = 'SET_FILTER_KEY';\nexport const SET_HIDE_NO_DOC = 'SET_HIDE_NO_DOC';\nexport const SET_INVERT_RESULT = 'SET_INVERT_RESULT';\nexport const SET_SORT_KEY = 'SET_SORT_KEY';\nexport const SET_USE_REGEXP = 'SET_USE_REGEXP';\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport entries from './entries';\n\nconst createRootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  entries\n})\n\nexport default createRootReducer;\n","import { SET_FILTER_KEY, SET_SORT_KEY, SET_HIDE_NO_DOC, SET_USE_REGEXP, SET_INVERT_RESULT } from './actionTypes';\n\nexport const setFilterKey = filterKey => ({\n  type: SET_FILTER_KEY,\n  payload: {\n    filterKey\n  }\n});\n\nexport const setSortKey = sortKey => ({\n  type: SET_SORT_KEY,\n  payload: {\n    sortKey\n  }\n});\n\nexport const setHideNoDoc = hideNoDoc => ({\n  type: SET_HIDE_NO_DOC,\n  payload: {\n    hideNoDoc\n  }\n});\n\nexport const setUseRegExp = useRegExp => ({\n  type: SET_USE_REGEXP,\n  payload: {\n    useRegExp\n  }\n});\n\nexport const setInvertResult = invertResult => ({\n  type: SET_INVERT_RESULT,\n  payload: {\n    invertResult\n  }\n});\n","import { setFilterKey, setUseRegExp, setInvertResult, setHideNoDoc } from '../actions';\nconst qs = require('query-string');\n\nlet done = false;\n\nconst parseLocation = ({ getState, dispatch }) => next => action => {\n  if (!done) {\n    done = true;\n    const router = getState().router;\n    if (router.location.pathname === '/search') {\n      const params = qs.parse(router.location.search);\n      dispatch(setFilterKey(params.filterKey || ''));\n      dispatch(setUseRegExp(params.useRegExp === 'true'));\n      dispatch(setInvertResult(params.invertResult === 'true'));\n      dispatch(setHideNoDoc(params.hideNoDoc === 'true'));\n    } else if (router.location.pathname === '/') {\n      dispatch(setFilterKey(''));\n    }\n  }\n  return next(action);\n};\n\nexport default parseLocation;\n","const updateTitle = ({ getState, dispatch }) => next => action => {\n  const result = next(action);\n  const title = getState().entries.filterKey || 'rails-class-table-v2';\n  if (document.title !== title) {\n    document.title = title;\n  }\n  return result;\n};\n\nexport default updateTitle;\n","import { push } from 'connected-react-router';\nimport { SET_FILTER_KEY, SET_HIDE_NO_DOC, SET_INVERT_RESULT, SET_USE_REGEXP } from '../actionTypes';\nconst qs = require('query-string');\n\nconst updateLocation = ({ getState, dispatch }) => next => action => {\n  const result = next(action);\n\n  switch (action.type) {\n    case SET_FILTER_KEY:\n    case SET_HIDE_NO_DOC:\n    case SET_INVERT_RESULT:\n    case SET_USE_REGEXP:\n      const router = getState().router;\n      const currentLocation = router.location.pathname + router.location.search;\n\n      const entries = getState().entries;\n      const query = qs.stringify({\n        filterKey: entries.filterKey,\n        useRegExp: entries.useRegExp,\n        invertResult: entries.invertResult,\n        hideNoDoc: entries.hideNoDoc\n      });\n      const newLocation = entries.filterKey ? `/search?${query}` : '/';\n\n      if (newLocation !== currentLocation) {\n        dispatch(push(newLocation));\n      }\n      break;\n    default:\n      break;\n  }\n\n  return result;\n};\n\nexport default updateLocation;\n","import { createHashHistory } from 'history';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from './reducers';\nimport parseLocation from './middleware/parseLocation';\nimport updateTitle from './middleware/updateTitle';\nimport updateLocation from './middleware/updateLocation';\n\nexport const history = createHashHistory();\n\nconst middleware = [parseLocation, routerMiddleware(history), updateTitle, updateLocation];\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    createRootReducer(history),\n    preloadedState,\n    composeWithDevTools(applyMiddleware(...middleware))\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setFilterKey } from '../actions';\nconst _ = require('lodash');\n\nclass SearchField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { input: this.props.filterKey };\n  }\n\n  setFilterKey = _.debounce(() => {\n    this.props.setFilterKey(this.state.input);\n  }, 500);\n\n  updateInput = event => {\n    this.setState({ input: event.target.value });\n    this.setFilterKey();\n  };\n\n  render() {\n    return (\n      <div className=\"form-group\">\n        <input type=\"search\" className=\"form-control\" placeholder=\"クラス名で検索...\" value={this.state.input} onChange={this.updateInput} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { filterKey: state.entries.filterKey };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setFilterKey }\n)(SearchField);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setUseRegExp } from '../actions';\n\nconst UseRegExp = ({ useRegExp, setUseRegExp }) => {\n  return (\n    <div className=\"form-check form-group\">\n      <input type=\"checkbox\" id=\"useRegExp\" className=\"form-check-input\" checked={useRegExp} onChange={e => setUseRegExp(e.target.checked)} />\n      <label className=\"form-check-label\" htmlFor=\"useRegExp\">正規表現で検索</label>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { useRegExp: state.entries.useRegExp };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setUseRegExp }\n)(UseRegExp);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setInvertResult } from '../actions';\n\nconst InvertResult = ({ invertResult, setInvertResult }) => {\n  return (\n    <div className=\"form-check form-group\">\n      <input type=\"checkbox\" id=\"invertResult\" className=\"form-check-input\" checked={invertResult} onChange={e => setInvertResult(e.target.checked)} />\n      <label className=\"form-check-label\" htmlFor=\"invertResult\">一致しないものを表示</label>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { invertResult: state.entries.invertResult };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setInvertResult }\n)(InvertResult);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setHideNoDoc } from '../actions';\n\nconst HideNoDoc = ({ hideNoDoc, setHideNoDoc }) => {\n  return (\n    <div className=\"form-check form-group\">\n      <input type=\"checkbox\" id=\"hideNoDoc\" className=\"form-check-input\" checked={hideNoDoc} onChange={e => setHideNoDoc(e.target.checked)} />\n      <label className=\"form-check-label\" htmlFor=\"hideNoDoc\">ドキュメントが書かれていないクラスを隠す</label>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { hideNoDoc: state.entries.hideNoDoc };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setHideNoDoc }\n)(HideNoDoc);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst ResultCount = ({ entry_count, char_count, percentage }) => {\n  return (\n    <p>{entry_count}件の結果、{char_count}文字 ({percentage}%)</p>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    entry_count: state.entries.filteredEntries.length,\n    char_count: state.entries.filteredEntries.reduce((sum, entry) => sum + entry.total, 0).toLocaleString(),\n    percentage: state.entries.percentage\n  };\n};\n\nexport default connect(mapStateToProps)(ResultCount);\n","import React from 'react';\nimport classnames from 'classnames';\n\nconst TableHeaderCell = ({ label, isNumber, width }) => {\n  const className = classnames({ 'text-right': isNumber });\n  const style = { width: width };\n  return <th className={className} style={style}>{label}</th>;\n};\n\nexport default TableHeaderCell;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { setSortKey } from '../actions';\n\nconst SortableTableHeaderCell = ({ label, sortKey, isNumber, width, stateSortKey, sortOrders, setSortKey }) => {\n  const className = classnames({\n    'table-info': sortKey === stateSortKey,\n    'text-right': isNumber,\n    'pointer': true\n  }, sortOrders[sortKey] > 0 ? 'dropup' : 'dropdown');\n  const style = { 'width': width };\n  return (\n    <th className={className}\n      style={style}\n      onClick={() => setSortKey(sortKey)}\n    >\n      {label}\n      {\" \"}\n      {<span className=\"dropdown-toggle\"></span>}\n    </th>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateSortKey: state.entries.sortKey,\n    sortOrders: state.entries.sortOrders\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setSortKey }\n)(SortableTableHeaderCell);\n","import React from 'react';\nimport TableHeaderCell from './TableHeaderCell';\nimport SortableTableHeaderCell from './SortableTableHeaderCell';\n\nexport default function TableHeaderRow() {\n  return (\n    <tr>\n      <TableHeaderCell label=\"#\" isNumber={true} width=\"5em\" />\n      <SortableTableHeaderCell label=\"クラス名\" sortKey=\"class_name\" isNumber={false} />\n      <SortableTableHeaderCell label=\"クラス概要\" sortKey=\"class_desc\" isNumber={true} width=\"8em\" />\n      <SortableTableHeaderCell label=\"メソッド数\" sortKey=\"method_count\" isNumber={true} width=\"8em\" />\n      <SortableTableHeaderCell label=\"メソッド概要\" sortKey=\"method_desc\" isNumber={true} width=\"9em\" />\n      <SortableTableHeaderCell label=\"合計\" sortKey=\"total\" isNumber={true} width=\"5em\" />\n    </tr>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nexport default function LinkCell({ entry }) {\n  return (\n    <td>\n      <a href={`https://api.rubyonrails.org/${entry.path}`}\n        className={classnames({'text-secondary': entry.total === 0})}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >{entry.class_name}</a>\n    </td>\n  );\n};\n","import React from 'react';\n\nexport default function NumberCell({ number }) {\n  return <td className=\"text-right\">{number}</td>;\n};\n","import React from 'react';\nimport LinkCell from './LinkCell';\nimport NumberCell from './NumberCell';\n\nexport default function TableRow({ entry }) {\n  return (\n    <tr>\n      <NumberCell number={entry.index} />\n      <LinkCell entry={entry} />\n      <NumberCell number={entry.class_desc} />\n      <NumberCell number={entry.method_count} />\n      <NumberCell number={entry.method_desc} />\n      <NumberCell number={entry.total} />\n    </tr>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport TableHeaderRow from './TableHeaderRow';\nimport TableRow from './TableRow';\n\nconst Table = ({ filteredEntries }) => {\n  return (\n    <table className=\"table table-hover\">\n      <thead>\n        <TableHeaderRow />\n      </thead>\n      <tbody>\n        {filteredEntries.map(entry => <TableRow entry={entry} key={entry.class_name} />)}\n      </tbody>\n    </table>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { filteredEntries: state.entries.filteredEntries };\n};\n\nexport default connect(\n  mapStateToProps\n)(Table);\n","import React from 'react';\nimport SearchField from './SearchField';\nimport UseRegExp from './UseRegExp';\nimport InvertResult from './InvertResult';\nimport HideNoDoc from './HideNoDoc';\nimport ResultCount from './ResultCount';\nimport Table from './Table';\n\nexport default function Main() {\n  return (\n    <div className=\"main container-fluid my-3\">\n      <p>\n        <a href=\"https://github.com/healthypackrat/rails-class-table-v2\">リポジトリに戻る</a>\n      </p>\n      <SearchField />\n      <UseRegExp />\n      <InvertResult />\n      <HideNoDoc />\n      <ResultCount />\n      <Table />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore, { history } from './configureStore';\nimport Main from './components/Main';\n\nconst store = configureStore();\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <Switch>\n          <Route path=\"/search\" component={Main} />\n          <Route path=\"/\" exact component={Main} />\n        </Switch>\n      </ConnectedRouter>\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}