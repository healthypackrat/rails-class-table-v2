{"version":3,"sources":["reducers/entries.js","actionTypes.js","reducers/index.js","actions.js","middleware/parseLocation.js","middleware/updateTitle.js","middleware/updateLocation.js","configureStore.js","components/SearchField.js","components/UseRegExp.js","components/InvertResult.js","components/HideNoDoc.js","components/ResultCount.js","components/TableHeaderCell.js","components/SortableTableHeaderCell.js","components/TableHeaderRow.js","components/LinkCell.js","components/NumberCell.js","components/TableRow.js","components/Table.js","components/Main.js","App.js","index.js"],"names":["sortPriorities","class_name","class_desc","method_count","method_desc","total","validSortKeys","Object","keys","initialState","filterKey","filteredEntries","sortKey","sortOrders","hideNoDoc","useRegExp","invertResult","totalChars","entries","reduce","sum","entry","setFilteredEntries","state","filterEntries","filteredTotalChars","length","percentage","Math","round","sortPriority","filter","pattern","condition","RegExp","e","test","toLowerCase","indexOf","sort","a","b","i","key","x","y","order","map","index","on_SET_FILTER_KEY","action","newState","payload","on_SET_SORT_KEY","includes","reverse","on_SET_HIDE_NO_DOC","on_SET_USE_REGEXP","on_SET_INVERT_RESULT","type","createRootReducer","history","combineReducers","router","connectRouter","setFilterKey","setSortKey","setHideNoDoc","setUseRegExp","setInvertResult","qs","require","done","parseLocation","getState","dispatch","next","location","pathname","params","parse","search","updateTitle","result","title","document","updateLocation","currentLocation","query","stringify","newLocation","push","createHashHistory","middleware","routerMiddleware","_","SearchField","props","debounce","input","updateInput","event","setState","target","value","className","placeholder","this","onChange","React","Component","connect","id","checked","htmlFor","entry_count","char_count","toLocaleString","TableHeaderCell","label","isNumber","width","classnames","style","stateSortKey","onClick","TableHeaderRow","LinkCell","href","path","rel","NumberCell","number","TableRow","Main","preloadedState","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","component","exact","getElementById"],"mappings":"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","file":"static/js/main.036a3a73.chunk.js","sourcesContent":["import { SET_FILTER_KEY, SET_SORT_KEY, SET_HIDE_NO_DOC, SET_USE_REGEXP, SET_INVERT_RESULT } from '../actionTypes';\nimport entries from '../data/entries.json';\n\nconst sortPriorities = {\n  class_name: ['class_name'],\n  class_desc: ['class_desc', 'method_desc', 'method_count', 'class_name'],\n  method_count: ['method_count', 'method_desc', 'class_desc', 'class_name'],\n  method_desc: ['method_desc', 'class_desc', 'method_count', 'class_name'],\n  total: ['total', 'method_desc', 'class_desc', 'method_count', 'class_name']\n};\n\nconst defaultSortKey = 'class_desc';\nconst validSortKeys = Object.keys(sortPriorities);\n\nconst initialState = {\n  filterKey: '',\n  filteredEntries: [],\n  sortKey: defaultSortKey,\n  sortOrders: {\n    class_name: 1,\n    class_desc: -1,\n    method_count: -1,\n    method_desc: -1,\n    total: -1\n  },\n  hideNoDoc: true,\n  useRegExp: false,\n  invertResult: false\n};\n\nconst totalChars = entries.reduce((sum, entry) => sum + entry.total, 0);\n\nconst setFilteredEntries = state => {\n  state.filteredEntries = filterEntries(state);\n  const filteredTotalChars = state.filteredEntries.reduce((sum, entry) => sum + entry.total, 0);\n  if (state.filteredEntries.length === entries.length) {\n    state.percentage = 100;\n  } else if (state.filteredEntries.length === 0) {\n    state.percentage = 0;\n  } else {\n    state.percentage = Math.round((filteredTotalChars / totalChars) * 10000) / 100;\n  }\n  return state;\n};\n\nconst filterEntries = state => {\n  const sortPriority = sortPriorities[state.sortKey];\n  return entries.filter(entry => {\n    let useRegExp = state.useRegExp;\n    let pattern;\n    let condition;\n    if (useRegExp) {\n      try {\n        pattern = new RegExp(state.filterKey, 'i');\n      } catch (e) {\n        useRegExp = false;\n      }\n    }\n    if (useRegExp) {\n      condition = pattern.test(entry.class_name);\n    } else {\n      condition = entry.class_name.toLowerCase().indexOf(state.filterKey.toLowerCase()) !== -1;\n    }\n    return state.invertResult ? !condition : condition;\n  }).filter(entry => {\n    if (state.hideNoDoc) {\n      return entry.total !== 0;\n    } else {\n      return true;\n    }\n  }).sort((a, b) => {\n    for (let i = 0; i < sortPriority.length; i++) {\n      const key = sortPriority[i];\n      const x = a[key];\n      const y = b[key];\n      const order = state.sortOrders[key];\n      if (x < y) {\n        return -1 * order;\n      } else if (x > y) {\n        return 1 * order;\n      }\n    }\n    return 0;\n  }).map((entry, index) => {\n    return {\n      ...entry,\n      index: index + 1\n    };\n  });\n};\n\nconst on_SET_FILTER_KEY = (state, action) => {\n  const newState = {\n    ...state,\n    filterKey: action.payload.filterKey\n  };\n  return setFilteredEntries(newState);\n};\n\nconst on_SET_SORT_KEY = (state, action) => {\n  let sortKey = action.payload.sortKey;\n  if (!validSortKeys.includes(sortKey)) {\n    sortKey = defaultSortKey;\n  }\n  const order = (action.payload.reverse && sortKey === state.sortKey) ? -1 : 1;\n  const sortOrders = {...state.sortOrders};\n  sortOrders[sortKey] *= order;\n  const newState = {\n    ...state,\n    sortKey,\n    sortOrders\n  };\n  return setFilteredEntries(newState);\n};\n\nconst on_SET_HIDE_NO_DOC = (state, action) => {\n  const newState = {\n    ...state,\n    hideNoDoc: action.payload.hideNoDoc\n  };\n  return setFilteredEntries(newState);\n};\n\nconst on_SET_USE_REGEXP = (state, action) => {\n  const newState = {\n    ...state,\n    useRegExp: action.payload.useRegExp\n  };\n  return setFilteredEntries(newState);\n};\n\nconst on_SET_INVERT_RESULT = (state, action) => {\n  const newState = {\n    ...state,\n    invertResult: action.payload.invertResult\n  };\n  return setFilteredEntries(newState);\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER_KEY:\n      return on_SET_FILTER_KEY(state, action);\n    case SET_SORT_KEY:\n      return on_SET_SORT_KEY(state, action);\n    case SET_HIDE_NO_DOC:\n      return on_SET_HIDE_NO_DOC(state, action);\n    case SET_USE_REGEXP:\n      return on_SET_USE_REGEXP(state, action);\n    case SET_INVERT_RESULT:\n      return on_SET_INVERT_RESULT(state, action);\n    default:\n      return state;\n  }\n};\n","export const SET_FILTER_KEY = 'SET_FILTER_KEY';\nexport const SET_HIDE_NO_DOC = 'SET_HIDE_NO_DOC';\nexport const SET_INVERT_RESULT = 'SET_INVERT_RESULT';\nexport const SET_SORT_KEY = 'SET_SORT_KEY';\nexport const SET_USE_REGEXP = 'SET_USE_REGEXP';\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport entries from './entries';\n\nconst createRootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  entries\n});\n\nexport default createRootReducer;\n","import { SET_FILTER_KEY, SET_SORT_KEY, SET_HIDE_NO_DOC, SET_USE_REGEXP, SET_INVERT_RESULT } from './actionTypes';\n\nexport const setFilterKey = filterKey => ({\n  type: SET_FILTER_KEY,\n  payload: {\n    filterKey\n  }\n});\n\nexport const setSortKey = (sortKey, reverse = true) => ({\n  type: SET_SORT_KEY,\n  payload: {\n    sortKey,\n    reverse\n  }\n});\n\nexport const setHideNoDoc = hideNoDoc => ({\n  type: SET_HIDE_NO_DOC,\n  payload: {\n    hideNoDoc\n  }\n});\n\nexport const setUseRegExp = useRegExp => ({\n  type: SET_USE_REGEXP,\n  payload: {\n    useRegExp\n  }\n});\n\nexport const setInvertResult = invertResult => ({\n  type: SET_INVERT_RESULT,\n  payload: {\n    invertResult\n  }\n});\n","import { setFilterKey, setSortKey, setUseRegExp, setInvertResult, setHideNoDoc } from '../actions';\nconst qs = require('query-string');\n\nlet done = false;\n\nconst parseLocation = ({ getState, dispatch }) => next => action => {\n  if (!done) {\n    done = true;\n    const router = getState().router;\n    if (router.location.pathname === '/search') {\n      const params = qs.parse(router.location.search);\n      dispatch(setFilterKey(params.filterKey || ''));\n      dispatch(setSortKey(params.sortKey, false));\n      dispatch(setUseRegExp(params.useRegExp === 'true'));\n      dispatch(setInvertResult(params.invertResult === 'true'));\n      dispatch(setHideNoDoc(params.hideNoDoc === 'true'));\n    } else if (router.location.pathname === '/') {\n      dispatch(setFilterKey(''));\n    }\n  }\n  return next(action);\n};\n\nexport default parseLocation;\n","const updateTitle = ({ getState, dispatch }) => next => action => {\n  const result = next(action);\n  const title = getState().entries.filterKey || 'rails-class-table-v2';\n  if (document.title !== title) {\n    document.title = title;\n  }\n  return result;\n};\n\nexport default updateTitle;\n","import { push } from 'connected-react-router';\nimport { SET_FILTER_KEY, SET_SORT_KEY, SET_HIDE_NO_DOC, SET_INVERT_RESULT, SET_USE_REGEXP } from '../actionTypes';\nconst qs = require('query-string');\n\nconst updateLocation = ({ getState, dispatch }) => next => action => {\n  const result = next(action);\n\n  switch (action.type) {\n    case SET_FILTER_KEY:\n    case SET_SORT_KEY:\n    case SET_HIDE_NO_DOC:\n    case SET_INVERT_RESULT:\n    case SET_USE_REGEXP:\n      const router = getState().router;\n      const currentLocation = router.location.pathname + router.location.search;\n\n      const entries = getState().entries;\n      const query = qs.stringify({\n        filterKey: entries.filterKey,\n        sortKey: entries.sortKey,\n        useRegExp: entries.useRegExp,\n        invertResult: entries.invertResult,\n        hideNoDoc: entries.hideNoDoc\n      });\n      const newLocation = entries.filterKey ? `/search?${query}` : '/';\n\n      if (newLocation !== currentLocation) {\n        dispatch(push(newLocation));\n      }\n      break;\n    default:\n      break;\n  }\n\n  return result;\n};\n\nexport default updateLocation;\n","import { createHashHistory } from 'history';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from './reducers';\nimport parseLocation from './middleware/parseLocation';\nimport updateTitle from './middleware/updateTitle';\nimport updateLocation from './middleware/updateLocation';\n\nexport const history = createHashHistory();\n\nconst middleware = [parseLocation, routerMiddleware(history), updateTitle, updateLocation];\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    createRootReducer(history),\n    preloadedState,\n    composeWithDevTools(applyMiddleware(...middleware))\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setFilterKey } from '../actions';\nconst _ = require('lodash');\n\nclass SearchField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { input: this.props.filterKey };\n  }\n\n  setFilterKey = _.debounce(() => {\n    this.props.setFilterKey(this.state.input);\n  }, 500);\n\n  updateInput = event => {\n    this.setState({ input: event.target.value });\n    this.setFilterKey();\n  };\n\n  render() {\n    return (\n      <div className=\"form-group\">\n        <input type=\"search\" className=\"form-control\" placeholder=\"クラス名で検索...\" value={this.state.input} onChange={this.updateInput} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { filterKey: state.entries.filterKey };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setFilterKey }\n)(SearchField);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setUseRegExp } from '../actions';\n\nconst UseRegExp = ({ useRegExp, setUseRegExp }) => {\n  return (\n    <div className=\"form-check form-group\">\n      <input type=\"checkbox\" id=\"useRegExp\" className=\"form-check-input\" checked={useRegExp} onChange={e => setUseRegExp(e.target.checked)} />\n      <label className=\"form-check-label\" htmlFor=\"useRegExp\">正規表現で検索</label>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { useRegExp: state.entries.useRegExp };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setUseRegExp }\n)(UseRegExp);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setInvertResult } from '../actions';\n\nconst InvertResult = ({ invertResult, setInvertResult }) => {\n  return (\n    <div className=\"form-check form-group\">\n      <input type=\"checkbox\" id=\"invertResult\" className=\"form-check-input\" checked={invertResult} onChange={e => setInvertResult(e.target.checked)} />\n      <label className=\"form-check-label\" htmlFor=\"invertResult\">一致しないものを表示</label>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { invertResult: state.entries.invertResult };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setInvertResult }\n)(InvertResult);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setHideNoDoc } from '../actions';\n\nconst HideNoDoc = ({ hideNoDoc, setHideNoDoc }) => {\n  return (\n    <div className=\"form-check form-group\">\n      <input type=\"checkbox\" id=\"hideNoDoc\" className=\"form-check-input\" checked={hideNoDoc} onChange={e => setHideNoDoc(e.target.checked)} />\n      <label className=\"form-check-label\" htmlFor=\"hideNoDoc\">ドキュメントが書かれていないクラスを隠す</label>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { hideNoDoc: state.entries.hideNoDoc };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setHideNoDoc }\n)(HideNoDoc);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst ResultCount = ({ entry_count, char_count, percentage }) => {\n  return (\n    <p>{entry_count}件の結果、{char_count}文字 ({percentage}%)</p>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    entry_count: state.entries.filteredEntries.length,\n    char_count: state.entries.filteredEntries.reduce((sum, entry) => sum + entry.total, 0).toLocaleString(),\n    percentage: state.entries.percentage\n  };\n};\n\nexport default connect(mapStateToProps)(ResultCount);\n","import React from 'react';\nimport classnames from 'classnames';\n\nconst TableHeaderCell = ({ label, isNumber, width }) => {\n  const className = classnames({ 'text-right': isNumber });\n  const style = { width: width };\n  return <th className={className} style={style}>{label}</th>;\n};\n\nexport default TableHeaderCell;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { setSortKey } from '../actions';\n\nconst SortableTableHeaderCell = ({ label, sortKey, isNumber, width, stateSortKey, sortOrders, setSortKey }) => {\n  const className = classnames({\n    'table-info': sortKey === stateSortKey,\n    'text-right': isNumber,\n    'pointer': true\n  }, sortOrders[sortKey] > 0 ? 'dropup' : 'dropdown');\n  const style = { 'width': width };\n  return (\n    <th className={className}\n      style={style}\n      onClick={() => setSortKey(sortKey)}\n    >\n      {label}\n      {\" \"}\n      {<span className=\"dropdown-toggle\"></span>}\n    </th>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    stateSortKey: state.entries.sortKey,\n    sortOrders: state.entries.sortOrders\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setSortKey }\n)(SortableTableHeaderCell);\n","import React from 'react';\nimport TableHeaderCell from './TableHeaderCell';\nimport SortableTableHeaderCell from './SortableTableHeaderCell';\n\nexport default function TableHeaderRow() {\n  return (\n    <tr>\n      <TableHeaderCell label=\"#\" isNumber={true} width=\"5em\" />\n      <SortableTableHeaderCell label=\"クラス名\" sortKey=\"class_name\" isNumber={false} />\n      <SortableTableHeaderCell label=\"クラス概要\" sortKey=\"class_desc\" isNumber={true} width=\"8em\" />\n      <SortableTableHeaderCell label=\"メソッド数\" sortKey=\"method_count\" isNumber={true} width=\"8em\" />\n      <SortableTableHeaderCell label=\"メソッド概要\" sortKey=\"method_desc\" isNumber={true} width=\"9em\" />\n      <SortableTableHeaderCell label=\"合計\" sortKey=\"total\" isNumber={true} width=\"5em\" />\n    </tr>\n  );\n}\n","import React from 'react';\nimport classnames from 'classnames';\n\nexport default function LinkCell({ entry }) {\n  return (\n    <td>\n      <a href={`https://api.rubyonrails.org/${entry.path}`}\n        className={classnames({'text-secondary': entry.total === 0})}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >{entry.class_name}</a>\n    </td>\n  );\n}\n","import React from 'react';\n\nexport default function NumberCell({ number }) {\n  return <td className=\"text-right\">{number}</td>;\n}\n","import React from 'react';\nimport LinkCell from './LinkCell';\nimport NumberCell from './NumberCell';\n\nexport default function TableRow({ entry }) {\n  return (\n    <tr>\n      <NumberCell number={entry.index} />\n      <LinkCell entry={entry} />\n      <NumberCell number={entry.class_desc} />\n      <NumberCell number={entry.method_count} />\n      <NumberCell number={entry.method_desc} />\n      <NumberCell number={entry.total} />\n    </tr>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport TableHeaderRow from './TableHeaderRow';\nimport TableRow from './TableRow';\n\nconst Table = ({ filteredEntries }) => {\n  return (\n    <table className=\"table table-hover\">\n      <thead>\n        <TableHeaderRow />\n      </thead>\n      <tbody>\n        {filteredEntries.map(entry => <TableRow entry={entry} key={entry.class_name} />)}\n      </tbody>\n    </table>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { filteredEntries: state.entries.filteredEntries };\n};\n\nexport default connect(\n  mapStateToProps\n)(Table);\n","import React from 'react';\nimport SearchField from './SearchField';\nimport UseRegExp from './UseRegExp';\nimport InvertResult from './InvertResult';\nimport HideNoDoc from './HideNoDoc';\nimport ResultCount from './ResultCount';\nimport Table from './Table';\n\nexport default function Main() {\n  return (\n    <div className=\"main container-fluid my-3\">\n      <p>\n        <a href=\"https://github.com/healthypackrat/rails-class-table-v2\">リポジトリに戻る</a>\n      </p>\n      <SearchField />\n      <UseRegExp />\n      <InvertResult />\n      <HideNoDoc />\n      <ResultCount />\n      <Table />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore, { history } from './configureStore';\nimport Main from './components/Main';\n\nconst store = configureStore();\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <Switch>\n          <Route path=\"/search\" component={Main} />\n          <Route path=\"/\" exact component={Main} />\n        </Switch>\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}